## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param commonLabels Labels to add to all deployed objects (sub-charts are not considered)
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Jaeger parameters
##

## Bitnami Jaeger image
## ref: https://hub.docker.com/r/bitnami/jaeger/tags/
## @param image.registry Jaeger image registry
## @param image.repository Jaeger image repository
## @param image.tag Jaeger image tag (immutable tags are recommended)
## @param image.digest Jaeger image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy image pull policy
## @param image.pullSecrets Jaeger image pull secrets
## @param image.debug Enable image debug mode
##
image:
  registry: docker.io
  repository: bitnami/jaeger
  tag: 1.39.0-debian-11-r0
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

## Secret with keystore, keystore password, truststore, truststore password
## DEPRECATED. Use tls.existingSecret instead
# tlsEncryptionSecretName:

## Database credentials
## @param dbUser.user Jaeger admin user
## @param dbUser.forcePassword Force the user to provide a non
## @param dbUser.password Password for `dbUser.user`. Randomly generated if empty
## @param dbUser.existingSecret Use an existing secret object for `dbUser.user` password (will ignore `dbUser.password`)
##
dbUser:
  user: jaeger
  forcePassword: false
  password: ""
  ## Use an existing secrets which already stores your password data.
  ## for backwards compatibility, existingSecret can be a simple string,
  ## referencing the secret by name.
  ## existingSecret:
  ##   ## Name of the existing secret
  ##   ##
  ##   name: mySecret
  ##   ## Key mapping where <key> is the value which the deployment is expecting and
  ##   ## <value> is the name of the key in the existing secret.
  ##   ##
  ##   keyMapping:
  ##     jaeger-password: myJaegerPasswordKey
  ##
  existingSecret: ""

## @param initDBConfigMap ConfigMap with cql scripts. Useful for creating a keyspace and pre-populating data
##
initDBConfigMap: ""
## @param initDBSecret Secret with cql script (with sensitive data). Useful for creating a keyspace and pre-populating data
##
initDBSecret: ""
## @param existingConfiguration ConfigMap with custom jaeger configuration files. This overrides any other Jaeger configuration set in the chart
##
existingConfiguration: ""
## Cluster parameters
## @param cluster.name Jaeger cluster name
## @param cluster.seedCount Number of seed nodes
## @param cluster.numTokens Number of tokens for each node
## @param cluster.datacenter Datacenter name
## @param cluster.rack Rack name
## @param cluster.endpointSnitch Endpoint Snitch
## @param cluster.internodeEncryption DEPRECATED: use tls.internode and tls.client instead. Encryption values.
## @param cluster.clientEncryption Client Encryption
## @param cluster.extraSeeds For an external/second jaeger ring.
## @param cluster.enableUDF Enable User defined functions
##
cluster:
  name: jaeger
  seedCount: 1
  numTokens: 256
  datacenter: dc1
  rack: rack1
  endpointSnitch: SimpleSnitch
  ## NOTE: internodeEncryption requires tlsEncryptionSecretName
  ##
  internodeEncryption: none
  clientEncryption: false
  ## eg:
  ## extraSeeds:
  ##   - hostname/IP
  ##   - hostname/IP
  ##
  extraSeeds: []
  enableUDF: false









query:
  ## @param command Command for running the container (set to default if not set). Use array form
  ##
  command: []
  ## @param args Args for running the container (set to default if not set). Use array form
  ##
  args: []
  ## @param lifecycleHooks [object] Override default etcd container hooks
  ##
  lifecycleHooks: {}
  ## @param extraEnvVars Extra environment variables to be set on jaeger container
  ## For example:
  ##  - name: FOO
  ##    value: BAR
  ##
  extraEnvVars: []
  ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param replicaCount Number of Jaeger replicas
  ##
  replicaCount: 1
  ## @param customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param customStartupProbe [object] Override default startup probe
  ##
  customStartupProbe: {}
  ## Jaeger pods' resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Minimum memory for development is 4GB and 2 CPU cores
  ## Minimum memory for production is 8GB and 4 CPU cores
  ## ref: http://docs.datastax.com/en/archived/jaeger/2.0/jaeger/architecture/architecturePlanningHardware_c.html
  ##
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param resources.limits The resources limits for Jaeger containers
  ## @param resources.requests The requested resources for Jaeger containers
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 2
    ##    memory: 4Gi
    ##
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 2
    ##    memory: 4Gi
    ##
    requests: {}
  ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for jaeger container
  ##
  extraVolumeMounts: [ ]
  ## Jaeger service parameters
  ##
  service:
    ## @param service.type Jaeger service type
    ##
    type: ClusterIP
    ## @param service.ports.....
    ## @param service.ports.....
    ##
    ports:
      api: 16686
      admin: 16687
    #    agent-compact: 6831
    #    agent_binary: 6832
    #    agent_config: 5778
    #    agent_zipkin: 5775
    #    agent_admin: 14271
    #    collector_grpc: 14250
    #    collector_binary: 14268
    #    collector_zipkin: 9411
    #    collector_admin: 14269
    ## Node ports to expose
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ## @param service.nodePorts.cql Node port for CQL
    ## @param service.nodePorts.metrics Node port for metrics
    ##
    nodePorts:
      cql: ""
      metrics: ""
    ## @param service.extraPorts Extra ports to expose in the service (normally used with the `sidecar` value)
    ##
    extraPorts: [ ]
    ## @param service.loadBalancerIP LoadBalancerIP if service type is `LoadBalancer`
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP: ""
    ## @param service.loadBalancerSourceRanges Service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: [ ]
    ## @param service.clusterIP Service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param service.externalTrafficPolicy Service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param service.annotations Provide any additional annotations which may be required.
    ## This can be used to set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: { }
    ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: { }
  ## Jaeger serviceAccount parameters
  ##
  serviceAccount:
    ## @param enabled Enables ServiceAccount
    ##
    enabled: true
    ## @param name ServiceAccount name
    ##
    name: jaeger-query-sa
    ## @param commonAnnotations Annotations to add to all deployed objects
    ##
    annotations: {}




## @section Cassandra storage pod
##
cassandra:
  enabled: true
## @param updateStrategy.type updateStrategy for Jaeger statefulset
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  type: RollingUpdate
## @param podManagementPolicy StatefulSet pod management policy
##
podManagementPolicy: OrderedReady
## Pod security context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Jaeger pods' Security Context
## @param podSecurityContext.fsGroup Set Jaeger pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled Jaeger containers' Security Context
## @param containerSecurityContext.runAsUser Set Jaeger container's Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Force the container to be run as non root
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
## @param priorityClassName Jaeger pods' priority.
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""
## @param podAnnotations Additional pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podLabels Additional pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
## The value is evaluated as a template
##
topologySpreadConstraints: []
## @param schedulerName Alternative scheduler
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds In seconds, time the given to the Jaeger pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param extraVolumes Optionally specify extra list of additional volumes for jaeger container
##
extraVolumes: []
## @param initContainers Add additional init containers to the jaeger pods
##
initContainers: []
## @param sidecars Add additional sidecar containers to the jaeger pods
##
sidecars: []
## Jaeger Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
pdb:
  ## @param pdb.create Enable/disable a Pod Disruption Budget creation
  ##
  create: false
  ## @param pdb.minAvailable Mininimum number of pods that must still be available after the eviction
  ##
  minAvailable: 1
  ## @param pdb.maxUnavailable Max number of pods that can be unavailable after the eviction
  ##
  maxUnavailable: ""
## @param hostNetwork Enable HOST Network
## If hostNetwork true ->  dnsPolicy is set to ClusterFirstWithHostNet
##
hostNetwork: false
## Jaeger container ports to open
## If hostNetwork true: the hostPort is set identical to the containerPort
## @param containerPorts.intra Intra Port on the Host and Container
## @param containerPorts.tls TLS Port on the Host and Container
## @param containerPorts.jmx JMX Port on the Host and Container
## @param containerPorts.cql CQL Port on the Host and Container
##
containerPorts:
  intra: 7000
  tls: 7001
  jmx: 7199
  cql: 9042

## Jaeger ports to be exposed as hostPort
## If hostNetwork is false, only the ports specified here will be exposed (or not if set to an empty string)
## @param hostPorts.intra Intra Port on the Host
## @param hostPorts.tls TLS Port on the Host
## @param hostPorts.jmx JMX Port on the Host
## @param hostPorts.cql CQL Port on the Host
##
hostPorts:
  intra: ""
  tls: ""
  jmx: ""
  cql: ""

## @section RBAC parameters
##

## Jaeger pods ServiceAccount
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable the creation of a ServiceAccount for Jaeger pods
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the jaeger.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Annotations for Jaeger Service Account
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount API credentials for a service account.
  ##
  automountServiceAccountToken: true

## @section Traffic Exposure Parameters
##

## Network policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: false
  ## @param networkPolicy.allowExternal Don't require client label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to the port Redis&reg; is listening
  ## on. When true, Redis&reg; will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true

## @section Persistence parameters
##

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable Jaeger data persistence using PVC, use a Persistent Volume Claim, If false, use emptyDir
  ##
  enabled: true
  ## @param persistence.storageClass PVC Storage Class for Jaeger data volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.commitStorageClass PVC Storage Class for Jaeger Commit Log volume
  ## Storage class to use with CASSANDRA_COMMITLOG_DIR to reduce the concurrence for writing data and commit logs
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/jaeger
  ## If set to "-", commitStorageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  commitStorageClass: ""
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
  ## @param persistence.accessModes Persistent Volume Access Mode
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size PVC Storage Request for Jaeger data volume
  ##
  size: 8Gi
  ## @param persistence.commitLogsize PVC Storage Request for Jaeger commit log volume. Unset by default
  ##
  commitLogsize: 2Gi
  ## @param persistence.mountPath The path the data volume will be mounted at
  ##
  mountPath: /bitnami/jaeger
  ## @param persistence.commitLogMountPath The path the commit log volume will be mounted at. Unset by default. Set it to '/bitnami/jaeger/commitlog' to enable a separate commit log volume
  ##
  # commitLogMountPath: /bitnami/jaeger/commitlog
  commitLogMountPath: ""

## @section Volume Permissions parameters
##

## Init containers parameters:
## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume
  ##
  enabled: false
  ## @param volumePermissions.image.registry Init container volume image registry
  ## @param volumePermissions.image.repository Init container volume image repository
  ## @param volumePermissions.image.tag Init container volume image tag (immutable tags are recommended)
  ## @param volumePermissions.image.digest Init container volume image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param volumePermissions.image.pullPolicy Init container volume pull policy
  ## @param volumePermissions.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r40
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container' resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param volumePermissions.resources.limits The resources limits for the container
  ## @param volumePermissions.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 100m
    ##    memory: 128Mi
    ##
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 128Mi
    ##
    requests: {}
  ## Init container Security Context
  ## Note: the chown of the data folder is done to securityContext.runAsUser
  ## and not the below volumePermissions.securityContext.runAsUser
  ## @param volumePermissions.securityContext.runAsUser User ID for the init container
  ##
  ## When runAsUser is set to special value "auto", init container will try to chwon the
  ## data folder to autodetermined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ## "auto" is especially useful for OpenShift which has scc with dynamic userids (and 0 is not allowed).
  ## You may want to use this volumePermissions.securityContext.runAsUser="auto" in combination with
  ## pod securityContext.enabled=false and shmVolume.chmod.enabled=false
  ##
  securityContext:
    runAsUser: 0

